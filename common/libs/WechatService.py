import hashlib, requests, uuid, json, datetime, timeimport xml.etree.ElementTree as ETfrom application import app, dbfrom common.model.oauth_access_token import OauthAccessTokenfrom common.model.oauth_jsticket import OauthJsticketfrom common.libs.WebHelper import getCurrentDatefrom flask import requestclass WeChatService():    def __init__(self):        pass    def create_sign(self, pay_data):        '''        生成签名        :param pay_data:        :return:        '''        stringA = '&'.join(["{0}={1}".format(k, pay_data.get(k)) for k in sorted(pay_data)])        sign = hashlib.md5(stringA.encode("utf-8")).hexdigest()        s1 = hashlib.sha1(stringA.encode("utf-8")).hexdigest()        return s1    def dict_to_xml(self, dict_data):        xml = ["<xml>"]        for k, v in dict_data.items():            xml.append("<{0}>{1}</{0}>".format(k, v))        xml.append("</xml>")        return "".join(xml)    def xml_to_dict(self, xml_data):        xml_dict = {}        root = ET.fromstring(xml_data)        for child in root:            xml_dict[child.tag] = child.text        return xml_dict    def get_nonce_str(self):        '''        获取随机字符串        :return:        '''        return str(uuid.uuid4()).replace('-', '')    def getAccessToken(self):        token = None        token_info = OauthAccessToken.query.filter(OauthAccessToken.expired_time >= getCurrentDate()).first()        if token_info:            token = token_info.access_token            return token        url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid={0}&secret={1}" \            .format('wx6950865320663956', '336da1d2a1f11447b057311f24655413')        r = requests.get(url=url)        if r.status_code != 200 or not r.text:            return token        data = json.loads(r.text)        now = datetime.datetime.now()        date = now + datetime.timedelta(seconds=data['expires_in'] - 200)        model_token = OauthAccessToken()        model_token.access_token = data['access_token']        model_token.expired_time = date.strftime("%Y-%m-%d %H:%M:%S")        model_token.created_time = getCurrentDate()        db.session.add(model_token)        db.session.commit()        return data['access_token']    def getJsSdk(self):        ticket = None        js_info = OauthJsticket.query.filter(OauthJsticket.expired_time >= getCurrentDate()).first()        if js_info:            ticket = js_info.ticket            return ticket        access_token = self.getAccessToken()        url = 'https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token={0}&type=jsapi'.format(access_token)        r = requests.get(url=url)        if r.status_code != 200 or not r.text:            return ticket        data = json.loads(r.text)        now = datetime.datetime.now()        date = now + datetime.timedelta(seconds=data['expires_in'] - 200)        model_token = OauthJsticket()        model_token.ticket = data['ticket']        model_token.expired_time = date.strftime("%Y-%m-%d %H:%M:%S")        model_token.created_time = getCurrentDate()        db.session.add(model_token)        db.session.commit()        return data['ticket']    def getShareData(self):        ticket = self.getJsSdk()        url = 'http://api.vaststrong.com' + request.full_path        data = {            'noncestr': self.get_nonce_str(),            'jsapi_ticket': ticket,            'timestamp': int(time.time()),            'url': url.split('#')[0]        }        signature = self.create_sign(pay_data=data)        data['signature'] = signature        return data